{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/jinz/Projects/project3/frontend/components/Items.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query ALL_ITEMS_QUERY{\\n    allItems {\\n        id\\n        title\\n        description\\n        image\\n        price\\n        unit\\n    }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport styled from 'styled-components';\nimport { Query } from 'react-apollo';\nimport Item from './Item';\nimport gql from 'graphql-tag';\nvar CatList = styled.div.withConfig({\n  displayName: \"Items__CatList\",\n  componentId: \"sc-98eal8-0\"\n})([\"display:flex;flex-wrap:nowrap;overflow-x:scroll;text-align:center;margin-bottom:2rem;\"]);\nvar ALL_ITEMS_QUERY = gql(_templateObject());\n\nvar Items = function Items() {\n  return __jsx(Query, {\n    query: ALL_ITEMS_QUERY,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, function (_ref) {\n    var data = _ref.data,\n        error = _ref.error,\n        loading = _ref.loading;\n    if (loading) return __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Loading...\");\n    if (error) return __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Error: \", error.message);\n    return __jsx(ItemList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, data.allItems.map(function (item) {\n      return __jsx(Item, {\n        item: item,\n        key: cat.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      });\n    }));\n  });\n};\n\nexport default Items;","map":{"version":3,"sources":["/Users/jinz/Projects/project3/frontend/components/Items.js"],"names":["styled","Query","Item","gql","CatList","div","ALL_ITEMS_QUERY","Items","data","error","loading","message","allItems","map","item","cat","id"],"mappings":";;;;;;;;;;;;;;;AACA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAGA,IAAMC,OAAO,GAAGJ,MAAM,CAACK,GAAV;AAAA;AAAA;AAAA,6FAAb;AAQA,IAAMC,eAAe,GAAGH,GAAH,mBAArB;;AAaA,IAAMI,KAAK,GAAG,SAARA,KAAQ;AAAA,SACV,MAAC,KAAD;AAAO,IAAA,KAAK,EAAED,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,gBAA8B;AAAA,QAA3BE,IAA2B,QAA3BA,IAA2B;AAAA,QAArBC,KAAqB,QAArBA,KAAqB;AAAA,QAAdC,OAAc,QAAdA,OAAc;AAC3B,QAAIA,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACb,QAAID,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAWA,KAAK,CAACE,OAAjB,CAAP;AACX,WACI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAWH,IAAI,CAACI,QAAL,CAAcC,GAAd,CAAkB,UAAAC,IAAI;AAAA,aAAI,MAAC,IAAD;AAAM,QAAA,IAAI,EAAEA,IAAZ;AAAkB,QAAA,GAAG,EAAEC,GAAG,CAACC,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ;AAAA,KAAtB,CAAX,CADJ;AAGH,GAPL,CADU;AAAA,CAAd;;AAYA,eAAeT,KAAf","sourcesContent":["\nimport styled from 'styled-components';\nimport { Query } from 'react-apollo';\nimport Item from './Item';\nimport gql from 'graphql-tag';\n\n\nconst CatList = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  overflow-x: scroll;\n  text-align: center;\n  margin-bottom: 2rem;\n`;\n\nconst ALL_ITEMS_QUERY = gql`\n    query ALL_ITEMS_QUERY{\n    allItems {\n        id\n        title\n        description\n        image\n        price\n        unit\n    }\n    }\n`;\n\nconst Items = () => (\n    <Query query={ALL_ITEMS_QUERY} >\n        {({ data, error, loading }) => {\n            if (loading) return <p>Loading...</p>;\n            if (error) return <p>Error: {error.message}</p>;\n            return (\n                <ItemList>{data.allItems.map(item => <Item item={item} key={cat.id} />)}</ItemList>\n            );\n        }}\n    </Query>\n)\n\nexport default Items;\n"]},"metadata":{},"sourceType":"module"}