{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/jinz/Projects/project3/frontend/components/DonationForm.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport Form from './styles/Form';\nimport { FormField, TextInputField, Autocomplete, TextInput, Checkbox, Button, Heading } from 'evergreen-ui';\nimport styled from 'styled-components';\nvar Styles = styled.div.withConfig({\n  displayName: \"DonationForm__Styles\",\n  componentId: \"sc-1a2kw3r-0\"\n})([\"background-color:\", \";padding:10rem 20rem 30rem 20rem;\"], function (props) {\n  return props.theme.lightgrey;\n});\n\nvar DonationForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DonationForm, _Component);\n\n  function DonationForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DonationForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DonationForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      email: '',\n      updates: false,\n      gift: 0,\n      allocation: \"\"\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"saveToState\", function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    });\n\n    return _this;\n  }\n\n  _createClass(DonationForm, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(Styles, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, __jsx(FormField, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, __jsx(Heading, {\n        size: 500,\n        marginTop: \"default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Email *\"), __jsx(TextInputField, {\n        isInvalid: false,\n        inputWidth: 400,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }), __jsx(Autocomplete, {\n        height: 50,\n        onChange: function onChange(changedItem) {\n          return console.log(changedItem);\n        },\n        items: ['$25', '$50', '$100', '$200', '$500'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, function (props) {\n        var getInputProps = props.getInputProps,\n            getRef = props.getRef,\n            inputValue = props.inputValue,\n            openMenu = props.openMenu;\n        return __jsx(TextInput, _extends({\n          placeholder: \"Choose or Enter an Amount\",\n          value: inputValue,\n          innerRef: getRef,\n          label: \"Gift Amount\"\n        }, getInputProps({\n          onFocus: function onFocus() {\n            openMenu();\n          }\n        }), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }));\n      }), __jsx(TextInputField, {\n        isInvalid: false,\n        required: true,\n        label: \"Allocation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, __jsx(Checkbox, {\n        onChange: function onChange(e) {\n          return setState({\n            checked: e.target.checked\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), \" \", __jsx(Heading, {\n        size: 500,\n        marginTop: \"default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Keep me updated on Free Spirits news\"), \" \"), __jsx(Button, {\n        height: 50,\n        marginTop: 30,\n        appearance: \"primary\",\n        intent: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Complete Transaction\")));\n    }\n  }]);\n\n  return DonationForm;\n}(Component);\n\nexport default DonationForm;","map":{"version":3,"sources":["/Users/jinz/Projects/project3/frontend/components/DonationForm.js"],"names":["React","Component","gql","Form","FormField","TextInputField","Autocomplete","TextInput","Checkbox","Button","Heading","styled","Styles","div","props","theme","lightgrey","DonationForm","email","updates","gift","allocation","e","setState","target","name","value","changedItem","console","log","getInputProps","getRef","inputValue","openMenu","onFocus","display","alignItems","checked"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,SAASC,SAAT,EAAoBC,cAApB,EAAoCC,YAApC,EAAkDC,SAAlD,EAA6DC,QAA7D,EAAuEC,MAAvE,EAA+EC,OAA/E,QAA8F,cAA9F;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,IAAMC,MAAM,GAAGD,MAAM,CAACE,GAAV;AAAA;AAAA;AAAA,+DACY,UAAAC,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,CAAYC,SAAhB;AAAA,CADjB,CAAZ;;IAIMC,Y;;;;;;;;;;;;;;;;;;4DACM;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,OAAO,EAAE,KAFL;AAGJC,MAAAA,IAAI,EAAE,CAHF;AAIJC,MAAAA,UAAU,EAAE;AAJR,K;;kEAMM,UAAAC,CAAC,EAAI;AACf,YAAKC,QAAL,qBAAiBD,CAAC,CAACE,MAAF,CAASC,IAA1B,EAAiCH,CAAC,CAACE,MAAF,CAASE,KAA1C;AACH,K;;;;;;;6BAEQ;AACL,aACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,OAAD;AAAS,QAAA,IAAI,EAAE,GAAf;AAAoB,QAAA,SAAS,EAAC,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI,MAAC,cAAD;AACI,QAAA,SAAS,EAAE,KADf;AAEI,QAAA,UAAU,EAAE,GAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAOI,MAAC,YAAD;AAAc,QAAA,MAAM,EAAE,EAAtB;AACI,QAAA,QAAQ,EAAE,kBAAAC,WAAW;AAAA,iBAAIC,OAAO,CAACC,GAAR,CAAYF,WAAZ,CAAJ;AAAA,SADzB;AAEI,QAAA,KAAK,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,MAAf,EAAuB,MAAvB,EAA+B,MAA/B,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIK,UAACb,KAAD,EAAW;AAAA,YACAgB,aADA,GACgDhB,KADhD,CACAgB,aADA;AAAA,YACeC,MADf,GACgDjB,KADhD,CACeiB,MADf;AAAA,YACuBC,UADvB,GACgDlB,KADhD,CACuBkB,UADvB;AAAA,YACmCC,QADnC,GACgDnB,KADhD,CACmCmB,QADnC;AAER,eACI,MAAC,SAAD;AACI,UAAA,WAAW,EAAC,2BADhB;AAEI,UAAA,KAAK,EAAED,UAFX;AAGI,UAAA,QAAQ,EAAED,MAHd;AAII,UAAA,KAAK,EAAC;AAJV,WAKQD,aAAa,CAAC;AACdI,UAAAA,OAAO,EAAE,mBAAM;AACXD,YAAAA,QAAQ;AACX;AAHa,SAAD,CALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAaH,OAnBL,CAPJ,EA6BI,MAAC,cAAD;AACI,QAAA,SAAS,EAAE,KADf;AAEI,QAAA,QAAQ,MAFZ;AAGI,QAAA,KAAK,EAAC,YAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA7BJ,EAkCI;AAAK,QAAA,KAAK,EAAE;AAAEE,UAAAA,OAAO,EAAE,MAAX;AAAmBC,UAAAA,UAAU,EAAE;AAA/B,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuD,MAAC,QAAD;AACnD,QAAA,QAAQ,EAAE,kBAAAd,CAAC;AAAA,iBAAIC,QAAQ,CAAC;AAAEc,YAAAA,OAAO,EAAEf,CAAC,CAACE,MAAF,CAASa;AAApB,WAAD,CAAZ;AAAA,SADwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAvD,OAEG,MAAC,OAAD;AAAS,QAAA,IAAI,EAAE,GAAf;AAAoB,QAAA,SAAS,EAAC,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAFH,MAlCJ,EAqCI,MAAC,MAAD;AAAQ,QAAA,MAAM,EAAE,EAAhB;AAAoB,QAAA,SAAS,EAAE,EAA/B;AAAmC,QAAA,UAAU,EAAC,SAA9C;AAAwD,QAAA,MAAM,EAAC,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCArCJ,CADJ,CADJ;AA+CH;;;;EA3DsBpC,S;;AA8D3B,eAAegB,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport Form from './styles/Form';\nimport { FormField, TextInputField, Autocomplete, TextInput, Checkbox, Button, Heading } from 'evergreen-ui';\nimport styled from 'styled-components';\n\nconst Styles = styled.div`\n    background-color: ${props => props.theme.lightgrey};\n    padding: 10rem 20rem 30rem 20rem;\n`;\nclass DonationForm extends Component {\n    state = {\n        email: '',\n        updates: false,\n        gift: 0,\n        allocation: \"\"\n    };\n    saveToState = e => {\n        this.setState({ [e.target.name]: e.target.value });\n    };\n\n    render() {\n        return (\n            <Styles>\n                <FormField>\n                    <Heading size={500} marginTop=\"default\">Email *</Heading>\n                    <TextInputField\n                        isInvalid={false}\n                        inputWidth={400}\n                    />\n\n                    <Autocomplete height={50}\n                        onChange={changedItem => console.log(changedItem)}\n                        items={['$25', '$50', '$100', '$200', '$500']}\n                    >\n                        {(props) => {\n                            const { getInputProps, getRef, inputValue, openMenu } = props\n                            return (\n                                <TextInput\n                                    placeholder=\"Choose or Enter an Amount\"\n                                    value={inputValue}\n                                    innerRef={getRef}\n                                    label=\"Gift Amount\"\n                                    {...getInputProps({\n                                        onFocus: () => {\n                                            openMenu()\n                                        }\n                                    })}\n                                />\n                            )\n                        }}\n                    </Autocomplete>\n\n                    <TextInputField\n                        isInvalid={false}\n                        required\n                        label=\"Allocation\"\n                    />\n                    <div style={{ display: \"flex\", alignItems: \"center\" }}><Checkbox\n                        onChange={e => setState({ checked: e.target.checked })}\n                    /> <Heading size={500} marginTop=\"default\">Keep me updated on Free Spirits news</Heading> </div>\n                    <Button height={50} marginTop={30} appearance=\"primary\" intent=\"success\" >\n                        Complete Transaction\n                </Button>\n\n\n                </FormField>\n            </Styles>\n        );\n    }\n}\n\nexport default DonationForm;\n"]},"metadata":{},"sourceType":"module"}