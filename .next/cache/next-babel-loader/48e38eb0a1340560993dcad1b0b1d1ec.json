{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/jinz/Projects/project3/frontend/components/AdoptionForm.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation CREATE_ADOPTION(\\n        $catId: Int!\\n        $userId: Int!\\n    ){ \\n        createAdoption(\\n            catId: $catId, \\n            userId: $userId )\\n            {\\n                adoption {\\n                    id\\n                    catId{\\n                    name\\n                    iucnStatus\\n                    habitat\\n                    number\\n                    subspecies\\n                    lifeSpan\\n                    size\\n                    weight\\n                    diet\\n                    image\\n                    bg\\n                    bg2\\n                    }\\n                }\\n            }\\n      }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { FormField, Button, Heading, Combobox } from 'evergreen-ui';\nimport styled from 'styled-components';\nimport { Query } from 'react-apollo';\nimport _ from 'underscore';\nimport { ALL_CATS_QUERY } from './DonationForm';\nvar Styles = styled.div.withConfig({\n  displayName: \"AdoptionForm__Styles\",\n  componentId: \"tea8n5-0\"\n})([\"background-color:white;padding:2rem 5rem;\"]);\nvar CREATE_ADOPTION = gql(_templateObject());\n\nvar AdoptionForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AdoptionForm, _Component);\n\n  function AdoptionForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AdoptionForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AdoptionForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      name: '',\n      image: \"static/image/stripe.jpg\"\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"saveToState\", function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    });\n\n    return _this;\n  }\n\n  _createClass(AdoptionForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Query, {\n        query: ALL_CATS_QUERY,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, function (_ref) {\n        var data = _ref.data;\n\n        var catsName = _.pluck(data.allCats, \"name\");\n\n        var cat = _.where(data.allCats, {\n          name: _this2.state.cat\n        })[0];\n\n        var image = cat ? cat.image : _this2.state.image;\n        return __jsx(Styles, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, __jsx(FormField, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, __jsx(Heading, {\n          size: 500,\n          marginTop: \"default\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, \"Allocation\"), __jsx(Combobox, {\n          name: \"allocation\",\n          openOnFocus: true,\n          width: 400,\n          items: catsName,\n          onChange: function onChange(selected) {\n            _this2.setState({\n              name: selected,\n              image: _.where(data.allCats, {\n                name: selected\n              })[0].image\n            });\n          },\n          placeholder: \"Select a Cat\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }), __jsx(\"div\", {\n          style: {\n            height: '200px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, __jsx(\"img\", {\n          style: {\n            height: \"100%\",\n            borderRadius: \"50%\",\n            margin: '3rem'\n          },\n          src: image,\n          alt: \"cat photo\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        })), __jsx(Mutation, {\n          mutation: TOGGLE_CART_MUTATION,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, function (toggleCart) {\n          return __jsx(Button, {\n            height: 50,\n            marginTop: 50,\n            appearance: \"primary\",\n            intent: \"success\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            },\n            __self: this\n          }, \"Adopt\");\n        })));\n      });\n    }\n  }]);\n\n  return AdoptionForm;\n}(Component);\n\nexport default AdoptionForm;","map":{"version":3,"sources":["/Users/jinz/Projects/project3/frontend/components/AdoptionForm.js"],"names":["React","Component","gql","FormField","Button","Heading","Combobox","styled","Query","_","ALL_CATS_QUERY","Styles","div","CREATE_ADOPTION","AdoptionForm","name","image","e","setState","target","value","data","catsName","pluck","allCats","cat","where","state","selected","height","borderRadius","margin","TOGGLE_CART_MUTATION","toggleCart"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { FormField, Button, Heading, Combobox } from 'evergreen-ui';\nimport styled from 'styled-components';\nimport { Query } from 'react-apollo';\nimport _ from 'underscore';\nimport { ALL_CATS_QUERY } from './DonationForm'\n\nconst Styles = styled.div`\n    background-color: white;\n    padding: 2rem 5rem;\n`;\n\n\nconst CREATE_ADOPTION = gql`\n    mutation CREATE_ADOPTION(\n        $catId: Int!\n        $userId: Int!\n    ){ \n        createAdoption(\n            catId: $catId, \n            userId: $userId )\n            {\n                adoption {\n                    id\n                    catId{\n                    name\n                    iucnStatus\n                    habitat\n                    number\n                    subspecies\n                    lifeSpan\n                    size\n                    weight\n                    diet\n                    image\n                    bg\n                    bg2\n                    }\n                }\n            }\n      }\n`;\n\nclass AdoptionForm extends Component {\n    state = {\n        name: '',\n        image: \"static/image/stripe.jpg\"\n    };\n\n\n    saveToState = e => {\n        this.setState({ [e.target.name]: e.target.value });\n    };\n\n    render() {\n        return (\n            <Query query={ALL_CATS_QUERY}>\n                {({ data }) => {\n                    const catsName = _.pluck(data.allCats, \"name\")\n                    let cat = _.where(data.allCats, { name: this.state.cat })[0]\n                    let image = cat ? cat.image : this.state.image\n                    return (\n                        <Styles>\n                            <FormField>\n                                <Heading size={500} marginTop=\"default\">Allocation</Heading>\n                                <Combobox\n                                    name=\"allocation\"\n                                    openOnFocus\n                                    width={400}\n                                    items={catsName}\n                                    onChange={selected => {\n                                        this.setState({\n                                            name: selected,\n                                            image: _.where(data.allCats, { name: selected })[0].image\n                                        })\n                                    }}\n                                    placeholder=\"Select a Cat\"\n                                />\n                                <div style={{ height: '200px' }}>\n                                    <img style={{ height: \"100%\", borderRadius: \"50%\", margin: '3rem' }} src={image} alt=\"cat photo\" />\n                                </div>\n                                <Mutation mutation={TOGGLE_CART_MUTATION}>\n                                    {(toggleCart) => (\n                                        <Button height={50} marginTop={50} appearance=\"primary\" intent=\"success\" >Adopt</Button>\n\n                                    )}\n                                </Mutation>\n                            </FormField>\n                        </Styles >\n                    )\n                }}\n            </Query>\n\n        );\n    }\n}\n\nexport default AdoptionForm;\n"]},"metadata":{},"sourceType":"module"}