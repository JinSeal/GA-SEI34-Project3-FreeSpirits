{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/jinz/Projects/project3/frontend/components/DonationForm.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport Form from './styles/Form';\nimport Error from './ErrorMessage';\nimport { FormField, TextInputField, Autocomplete } from 'evergreen-ui';\n\nvar DonationForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DonationForm, _Component);\n\n  function DonationForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DonationForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DonationForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      email: '',\n      updates: false,\n      gift: 0,\n      allocation: \"\"\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"saveToState\", function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    });\n\n    return _this;\n  }\n\n  _createClass(DonationForm, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(FormField, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, __jsx(TextInputField, {\n        isInvalid: false,\n        required: true,\n        label: \"Email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }), __jsx(Autocomplete, {\n        height: 50,\n        onChange: function onChange(changedItem) {\n          return console.log(changedItem);\n        },\n        items: ['$25', '$50', '$100', '$200', '$500'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, function (props) {\n        var getInputProps = props.getInputProps,\n            getRef = props.getRef,\n            inputValue = props.inputValue,\n            openMenu = props.openMenu;\n        return __jsx(TextInput, _extends({\n          placeholder: \"Choose or Enter an Amount\",\n          value: inputValue,\n          innerRef: getRef,\n          label: \"Gift Amount\"\n        }, getInputProps({\n          onFocus: function onFocus() {\n            openMenu();\n          }\n        }), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }));\n      }), __jsx(TextInputField, {\n        isInvalid: false,\n        required: true,\n        label: \"Allocation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), \"checkbox keep me updated on Free Spirits giftamount Button complete transaction\");\n    }\n  }]);\n\n  return DonationForm;\n}(Component);\n\nexport default DonationForm;","map":{"version":3,"sources":["/Users/jinz/Projects/project3/frontend/components/DonationForm.js"],"names":["React","Component","gql","Form","Error","FormField","TextInputField","Autocomplete","DonationForm","email","updates","gift","allocation","e","setState","target","name","value","changedItem","console","log","props","getInputProps","getRef","inputValue","openMenu","onFocus"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,SAAT,EAAoBC,cAApB,EAAoCC,YAApC,QAAwD,cAAxD;;IAGMC,Y;;;;;;;;;;;;;;;;;;4DACM;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,OAAO,EAAE,KAFL;AAGJC,MAAAA,IAAI,EAAE,CAHF;AAIJC,MAAAA,UAAU,EAAE;AAJR,K;;kEAMM,UAAAC,CAAC,EAAI;AACf,YAAKC,QAAL,qBAAiBD,CAAC,CAACE,MAAF,CAASC,IAA1B,EAAiCH,CAAC,CAACE,MAAF,CAASE,KAA1C;AACH,K;;;;;;;6BAEQ;AACL,aACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,cAAD;AACI,QAAA,SAAS,EAAE,KADf;AAEI,QAAA,QAAQ,MAFZ;AAGI,QAAA,KAAK,EAAC,OAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAMI,MAAC,YAAD;AAAc,QAAA,MAAM,EAAE,EAAtB;AACI,QAAA,QAAQ,EAAE,kBAAAC,WAAW;AAAA,iBAAIC,OAAO,CAACC,GAAR,CAAYF,WAAZ,CAAJ;AAAA,SADzB;AAEI,QAAA,KAAK,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,MAAf,EAAuB,MAAvB,EAA+B,MAA/B,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIK,UAACG,KAAD,EAAW;AAAA,YACAC,aADA,GACgDD,KADhD,CACAC,aADA;AAAA,YACeC,MADf,GACgDF,KADhD,CACeE,MADf;AAAA,YACuBC,UADvB,GACgDH,KADhD,CACuBG,UADvB;AAAA,YACmCC,QADnC,GACgDJ,KADhD,CACmCI,QADnC;AAER,eACI,MAAC,SAAD;AACI,UAAA,WAAW,EAAC,2BADhB;AAEI,UAAA,KAAK,EAAED,UAFX;AAGI,UAAA,QAAQ,EAAED,MAHd;AAII,UAAA,KAAK,EAAC;AAJV,WAKQD,aAAa,CAAC;AACdI,UAAAA,OAAO,EAAE,mBAAM;AACXD,YAAAA,QAAQ;AACX;AAHa,SAAD,CALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAaH,OAnBL,CANJ,EA4BI,MAAC,cAAD;AACI,QAAA,SAAS,EAAE,KADf;AAEI,QAAA,QAAQ,MAFZ;AAGI,QAAA,KAAK,EAAC,YAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA5BJ,oFADJ;AA0CH;;;;EAtDsBxB,S;;AAyD3B,eAAeO,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport Form from './styles/Form';\nimport Error from './ErrorMessage';\nimport { FormField, TextInputField, Autocomplete } from 'evergreen-ui';\n\n\nclass DonationForm extends Component {\n    state = {\n        email: '',\n        updates: false,\n        gift: 0,\n        allocation: \"\"\n    };\n    saveToState = e => {\n        this.setState({ [e.target.name]: e.target.value });\n    };\n\n    render() {\n        return (\n            <FormField>\n                <TextInputField\n                    isInvalid={false}\n                    required\n                    label=\"Email\"\n                />\n                <Autocomplete height={50}\n                    onChange={changedItem => console.log(changedItem)}\n                    items={['$25', '$50', '$100', '$200', '$500']}\n                >\n                    {(props) => {\n                        const { getInputProps, getRef, inputValue, openMenu } = props\n                        return (\n                            <TextInput\n                                placeholder=\"Choose or Enter an Amount\"\n                                value={inputValue}\n                                innerRef={getRef}\n                                label=\"Gift Amount\"\n                                {...getInputProps({\n                                    onFocus: () => {\n                                        openMenu()\n                                    }\n                                })}\n                            />\n                        )\n                    }}\n                </Autocomplete>\n\n                <TextInputField\n                    isInvalid={false}\n                    required\n                    label=\"Allocation\"\n                />\n\n\n                checkbox keep me updated on Free Spirits\n                giftamount\n                Button complete transaction\n\n            </FormField>\n        );\n    }\n}\n\nexport default DonationForm;\n"]},"metadata":{},"sourceType":"module"}