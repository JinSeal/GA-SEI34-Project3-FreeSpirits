{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nconst SINGLE_CAT_QUERY = gql`\n  query SINGLE_CATS_QUERY($name: String!) {\n    cat(name: $name) {\n      id\n      name\n      description\n      habitat\n      iucnStatus\n      number\n      subspecies\n      lifeSpan\n      size\n      weight\n      diet\n      bg\n      bg2\n      photoSet {\n        id\n        url\n      }\n    }\n  }\n`;\nconst Style = styled.div.withConfig({\n  displayName: \"SingleCat__Style\",\n  componentId: \"sc-1micj82-0\"\n})([\".gallary{width:100%;img{width:100%;height:auto;}}.fact{padding:5rem;display:flex;flex-wrap:wrap;justify-content:space-around;h1{font-size:8rem;}table{min-width:600px;max-width:900px;border-top:2px solid white;border-bottom:2px solid white;}table td{padding:0.8em 3em;border-bottom:1px solid rgba(255,255,255,0.5);font-family:Arial,Helvetica,sans-serif;color:rgba(255,255,255,0.5);}table tr td:last-child{color:white;min-width:500px;}}.links{background-color:\", \"}}\"], props => props.theme.lightgrey);\n\nclass Cat extends Component {\n  render() {\n    return __jsx(Query, {\n      query: SINGLE_CAT_QUERY,\n      variables: {\n        name: this.props.query.name\n      }\n    }, ({\n      data,\n      error,\n      loading\n    }) => {\n      if (loading) return __jsx(\"p\", null, \"Loading...\");\n      if (error) return __jsx(\"p\", null, \"Error: \", error.message);\n      const cat = data.cat;\n      return __jsx(Style, null, __jsx(\"div\", {\n        className: \"gallary\"\n      }, __jsx(\"img\", {\n        src: cat.bg\n      })), __jsx(\"div\", {\n        className: \"fact\"\n      }, __jsx(\"h1\", null, cat.name), __jsx(\"table\", null, __jsx(\"tbody\", null, __jsx(\"tr\", null, __jsx(\"td\", null, \"IUCN RED LIST STATUS\"), __jsx(\"td\", null, iucnDic[cat.iucnStatus])), __jsx(\"tr\", null, __jsx(\"td\", null, \"LEFT IN THE WILD\"), __jsx(\"td\", null, cat.number)), __jsx(\"tr\", null, __jsx(\"td\", null, \"RANGE\"), __jsx(\"td\", null, cat.habitat)), __jsx(\"tr\", null, __jsx(\"td\", null, \"SUB-SPECIES\"), __jsx(\"td\", null, cat.subspecies)), __jsx(\"tr\", null, __jsx(\"td\", null, \"LIFE SPAN\"), __jsx(\"td\", null, cat.lifeSpan)), __jsx(\"tr\", null, __jsx(\"td\", null, \"SIZE\"), __jsx(\"td\", null, cat.size)), __jsx(\"tr\", null, __jsx(\"td\", null, \"WEIGHT\"), __jsx(\"td\", null, cat.weight)), __jsx(\"tr\", null, __jsx(\"td\", null, \"DIET\"), __jsx(\"td\", null, cat.diet))))));\n    });\n  }\n\n}\n\nexport default Cat;\nconst iucnDic = {\n  A_1: 'Extinct',\n  A_2: 'Extinct in the wild',\n  A_3: 'Creitically endangered',\n  A_4: 'Endangered',\n  A_5: 'Vulnerable',\n  A_6: 'Near threatened',\n  A_7: 'Least concern'\n};","map":null,"metadata":{},"sourceType":"module"}