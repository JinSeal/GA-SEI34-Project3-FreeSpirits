{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/jinz/Projects/project3/frontend/components/Signin.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation SIGNIN_MUTATION($username: String!, $password: String!) {\\n    tokenAuth(username: $username, password: $password) {\\n      token\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Form from './styles/Form';\nimport Error from './ErrorMessage';\nimport { CURRENT_USER_QUERY } from './User';\nvar SIGNIN_MUTATION = gql(_templateObject());\n\nvar Signin =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Signin, _Component);\n\n  function Signin() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Signin);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Signin)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      username: '',\n      password: '',\n      email: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"saveToState\", function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    });\n\n    return _this;\n  }\n\n  _createClass(Signin, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Mutation, {\n        mutation: SIGNIN_MUTATION,\n        variables: this.state,\n        refetchQueries: [{\n          query: CURRENT_USER_QUERY\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, function (signup, _ref) {\n        var error = _ref.error,\n            loading = _ref.loading;\n        return __jsx(Form, {\n          method: \"post\",\n          onSubmit: function _callee(e) {\n            var res;\n            return _regeneratorRuntime.async(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    e.preventDefault();\n                    _context.next = 3;\n                    return _regeneratorRuntime.awrap(signup());\n\n                  case 3:\n                    res = _context.sent;\n                    console.log(res);\n                    document.cookie = 'token=' + res.data.tokenAuth.token;\n\n                    _this2.setState({\n                      username: '',\n                      email: '',\n                      password: ''\n                    });\n\n                  case 7:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, __jsx(\"fieldset\", {\n          disabled: loading,\n          \"aria-busy\": loading,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, __jsx(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, \"Sign into your account\"), __jsx(Error, {\n          error: error,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }), __jsx(\"label\", {\n          htmlFor: \"username\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, \"Username\", __jsx(\"input\", {\n          type: \"username\",\n          name: \"username\",\n          placeholder: \"username\",\n          value: _this2.state.username,\n          onChange: _this2.saveToState,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        })), __jsx(\"label\", {\n          htmlFor: \"password\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, \"Password\", __jsx(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"password\",\n          value: _this2.state.password,\n          onChange: _this2.saveToState,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        })), __jsx(\"button\", {\n          type: \"submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, \"Sign In!\")));\n      });\n    }\n  }]);\n\n  return Signin;\n}(Component);\n\nexport default Signin;","map":{"version":3,"sources":["/Users/jinz/Projects/project3/frontend/components/Signin.js"],"names":["React","Component","Mutation","gql","Form","Error","CURRENT_USER_QUERY","SIGNIN_MUTATION","Signin","username","password","email","e","setState","target","name","value","state","query","signup","error","loading","preventDefault","res","console","log","document","cookie","data","tokenAuth","token","saveToState"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Form from './styles/Form';\nimport Error from './ErrorMessage';\nimport { CURRENT_USER_QUERY } from './User';\n\nconst SIGNIN_MUTATION = gql`\n  mutation SIGNIN_MUTATION($username: String!, $password: String!) {\n    tokenAuth(username: $username, password: $password) {\n      token\n    }\n  }\n`;\n\nclass Signin extends Component {\n  state = {\n    username: '',\n    password: '',\n    email: '',\n  };\n  saveToState = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  render() {\n    return (\n      <Mutation\n        mutation={SIGNIN_MUTATION}\n        variables={this.state}\n        refetchQueries={[{ query: CURRENT_USER_QUERY }]}\n      >\n        {(signup, { error, loading }) => (\n          <Form\n            method=\"post\"\n            onSubmit={async e => {\n              e.preventDefault();\n              const res = await signup();\n              console.log(res);\n              document.cookie = 'token=' + res.data.tokenAuth.token\n              this.setState({ username: '', email: '', password: '' });\n            }}\n          >\n            <fieldset disabled={loading} aria-busy={loading}>\n              <h2>Sign into your account</h2>\n              <Error error={error} />\n              <label htmlFor=\"username\">\n                Username\n                <input\n                  type=\"username\"\n                  name=\"username\"\n                  placeholder=\"username\"\n                  value={this.state.username}\n                  onChange={this.saveToState}\n                />\n              </label>\n              <label htmlFor=\"password\">\n                Password\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"password\"\n                  value={this.state.password}\n                  onChange={this.saveToState}\n                />\n              </label>\n\n              <button type=\"submit\">Sign In!</button>\n            </fieldset>\n          </Form>\n        )}\n      </Mutation>\n    );\n  }\n}\n\nexport default Signin;\n"]},"metadata":{},"sourceType":"module"}