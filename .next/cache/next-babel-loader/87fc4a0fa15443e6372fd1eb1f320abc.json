{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/jinz/Projects/project3/frontend/components/DonationForm.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport Form from './styles/Form';\nimport { FormField, TextInputField, Autocomplete, TextInput } from 'evergreen-ui';\n\nclass DonationForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      email: '',\n      updates: false,\n      gift: 0,\n      allocation: \"\"\n    });\n\n    _defineProperty(this, \"saveToState\", e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    });\n  }\n\n  render() {\n    return __jsx(FormField, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, __jsx(TextInputField, {\n      isInvalid: false,\n      required: true,\n      label: \"Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }), __jsx(Checkbox, {\n      label: \"Controlled usage\",\n      checked: state.checked,\n      onChange: e => setState({\n        checked: e.target.checked\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), __jsx(Autocomplete, {\n      height: 50,\n      onChange: changedItem => console.log(changedItem),\n      items: ['$25', '$50', '$100', '$200', '$500'],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, props => {\n      const {\n        getInputProps,\n        getRef,\n        inputValue,\n        openMenu\n      } = props;\n      return __jsx(TextInput, _extends({\n        placeholder: \"Choose or Enter an Amount\",\n        value: inputValue,\n        innerRef: getRef,\n        label: \"Gift Amount\"\n      }, getInputProps({\n        onFocus: () => {\n          openMenu();\n        }\n      }), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }));\n    }), __jsx(TextInputField, {\n      isInvalid: false,\n      required: true,\n      label: \"Allocation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), \"checkbox keep me updated on Free Spirits Button complete transaction\");\n  }\n\n}\n\nexport default DonationForm;","map":{"version":3,"sources":["/Users/jinz/Projects/project3/frontend/components/DonationForm.js"],"names":["React","Component","gql","Form","FormField","TextInputField","Autocomplete","TextInput","DonationForm","email","updates","gift","allocation","e","setState","target","name","value","render","state","checked","changedItem","console","log","props","getInputProps","getRef","inputValue","openMenu","onFocus"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,SAASC,SAAT,EAAoBC,cAApB,EAAoCC,YAApC,EAAkDC,SAAlD,QAAmE,cAAnE;;AAGA,MAAMC,YAAN,SAA2BP,SAA3B,CAAqC;AAAA;AAAA;;AAAA,mCACzB;AACJQ,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,OAAO,EAAE,KAFL;AAGJC,MAAAA,IAAI,EAAE,CAHF;AAIJC,MAAAA,UAAU,EAAE;AAJR,KADyB;;AAAA,yCAOnBC,CAAC,IAAI;AACf,WAAKC,QAAL,CAAc;AAAE,SAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AAA5B,OAAd;AACH,KATgC;AAAA;;AAWjCC,EAAAA,MAAM,GAAG;AACL,WACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,cAAD;AACI,MAAA,SAAS,EAAE,KADf;AAEI,MAAA,QAAQ,MAFZ;AAGI,MAAA,KAAK,EAAC,OAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAMI,MAAC,QAAD;AACI,MAAA,KAAK,EAAC,kBADV;AAEI,MAAA,OAAO,EAAEC,KAAK,CAACC,OAFnB;AAGI,MAAA,QAAQ,EAAEP,CAAC,IAAIC,QAAQ,CAAC;AAAEM,QAAAA,OAAO,EAAEP,CAAC,CAACE,MAAF,CAASK;AAApB,OAAD,CAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,EAWI,MAAC,YAAD;AAAc,MAAA,MAAM,EAAE,EAAtB;AACI,MAAA,QAAQ,EAAEC,WAAW,IAAIC,OAAO,CAACC,GAAR,CAAYF,WAAZ,CAD7B;AAEI,MAAA,KAAK,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,MAAf,EAAuB,MAAvB,EAA+B,MAA/B,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIMG,KAAD,IAAW;AACR,YAAM;AAAEC,QAAAA,aAAF;AAAiBC,QAAAA,MAAjB;AAAyBC,QAAAA,UAAzB;AAAqCC,QAAAA;AAArC,UAAkDJ,KAAxD;AACA,aACI,MAAC,SAAD;AACI,QAAA,WAAW,EAAC,2BADhB;AAEI,QAAA,KAAK,EAAEG,UAFX;AAGI,QAAA,QAAQ,EAAED,MAHd;AAII,QAAA,KAAK,EAAC;AAJV,SAKQD,aAAa,CAAC;AACdI,QAAAA,OAAO,EAAE,MAAM;AACXD,UAAAA,QAAQ;AACX;AAHa,OAAD,CALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ;AAaH,KAnBL,CAXJ,EAiCI,MAAC,cAAD;AACI,MAAA,SAAS,EAAE,KADf;AAEI,MAAA,QAAQ,MAFZ;AAGI,MAAA,KAAK,EAAC,YAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjCJ,yEADJ;AA8CH;;AA1DgC;;AA6DrC,eAAepB,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport Form from './styles/Form';\nimport { FormField, TextInputField, Autocomplete, TextInput } from 'evergreen-ui';\n\n\nclass DonationForm extends Component {\n    state = {\n        email: '',\n        updates: false,\n        gift: 0,\n        allocation: \"\"\n    };\n    saveToState = e => {\n        this.setState({ [e.target.name]: e.target.value });\n    };\n\n    render() {\n        return (\n            <FormField>\n                <TextInputField\n                    isInvalid={false}\n                    required\n                    label=\"Email\"\n                />\n                <Checkbox\n                    label=\"Controlled usage\"\n                    checked={state.checked}\n                    onChange={e => setState({ checked: e.target.checked })}\n                />\n                <Autocomplete height={50}\n                    onChange={changedItem => console.log(changedItem)}\n                    items={['$25', '$50', '$100', '$200', '$500']}\n                >\n                    {(props) => {\n                        const { getInputProps, getRef, inputValue, openMenu } = props\n                        return (\n                            <TextInput\n                                placeholder=\"Choose or Enter an Amount\"\n                                value={inputValue}\n                                innerRef={getRef}\n                                label=\"Gift Amount\"\n                                {...getInputProps({\n                                    onFocus: () => {\n                                        openMenu()\n                                    }\n                                })}\n                            />\n                        )\n                    }}\n                </Autocomplete>\n\n                <TextInputField\n                    isInvalid={false}\n                    required\n                    label=\"Allocation\"\n                />\n\n\n                checkbox keep me updated on Free Spirits\n                Button complete transaction\n\n            </FormField>\n        );\n    }\n}\n\nexport default DonationForm;\n"]},"metadata":{},"sourceType":"module"}