{"ast":null,"code":"import withApollo from \"next-with-apollo\";\nimport ApolloClient from \"apollo-boost\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { endpoint, prodEndpoint } from \"../config\";\nimport { createHttpLink } from \"apollo-link-http\";\n\nfunction createClient(_ref) {\n  var headers = _ref.headers;\n  return new ApolloClient({\n    cache: new InMemoryCache(),\n    uri: true ? endpoint : prodEndpoint,\n    request: function request(operation) {\n      operation.setContext({\n        fetchOptions: {\n          credentials: \"include\"\n        },\n        headers: headers\n      });\n    }\n  });\n}\n\nexport default withApollo(createClient);","map":{"version":3,"sources":["/Users/jinz/Projects/project3/frontend/lib/withData.js"],"names":["withApollo","ApolloClient","InMemoryCache","endpoint","prodEndpoint","createHttpLink","createClient","headers","cache","uri","request","operation","setContext","fetchOptions","credentials"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,kBAAvB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,QAAT,EAAmBC,YAAnB,QAAuC,WAAvC;AACA,SAASC,cAAT,QAA+B,kBAA/B;;AAEA,SAASC,YAAT,OAAmC;AAAA,MAAXC,OAAW,QAAXA,OAAW;AACjC,SAAO,IAAIN,YAAJ,CAAiB;AACtBO,IAAAA,KAAK,EAAE,IAAIN,aAAJ,EADe;AAEtBO,IAAAA,GAAG,EAAE,OAAyCN,QAAzC,GAAoDC,YAFnC;AAGtBM,IAAAA,OAAO,EAAE,iBAAAC,SAAS,EAAI;AACpBA,MAAAA,SAAS,CAACC,UAAV,CAAqB;AACnBC,QAAAA,YAAY,EAAE;AACZC,UAAAA,WAAW,EAAE;AADD,SADK;AAInBP,QAAAA,OAAO,EAAPA;AAJmB,OAArB;AAMD;AAVqB,GAAjB,CAAP;AAYD;;AAED,eAAeP,UAAU,CAACM,YAAD,CAAzB","sourcesContent":["import withApollo from \"next-with-apollo\";\nimport ApolloClient from \"apollo-boost\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { endpoint, prodEndpoint } from \"../config\";\nimport { createHttpLink } from \"apollo-link-http\";\n\nfunction createClient({ headers }) {\n  return new ApolloClient({\n    cache: new InMemoryCache(),\n    uri: process.env.NODE_ENV === \"development\" ? endpoint : prodEndpoint,\n    request: operation => {\n      operation.setContext({\n        fetchOptions: {\n          credentials: \"include\"\n        },\n        headers\n      });\n    }\n  });\n}\n\nexport default withApollo(createClient);\n"]},"metadata":{},"sourceType":"module"}