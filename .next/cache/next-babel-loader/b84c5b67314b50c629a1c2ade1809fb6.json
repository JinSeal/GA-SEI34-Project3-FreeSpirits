{"ast":null,"code":"var __jsx = React.createElement;\nimport Link from 'next/link';\nimport React, { useState } from 'react';\nimport NProgress from 'nprogress';\nimport Router from 'next/router';\nimport Nav from './Nav';\nimport LogoStyles from './styles/LogoStyles';\nimport styled from 'styled-components';\nimport { Query } from 'react-apollo';\nimport NavCat from './NavCat';\nimport gql from 'graphql-tag';\n\nRouter.onRouteChangeStart = () => {\n  NProgress.start();\n};\n\nRouter.onRouteChangeComplete = () => {\n  NProgress.done();\n};\n\nRouter.onRouteChangeError = () => {\n  NProgress.done();\n};\n\nconst HeaderStyles = styled.header.withConfig({\n  displayName: \"Header__HeaderStyles\",\n  componentId: \"lu69i-0\"\n})([\".bar{background:#162231;color:white;display:grid;grid-template-columns:auto 1fr;justify-content:space-between;align-items:stretch;@media (max-width:1300px){grid-template-columns:1fr;justify-content:center;}}\"]);\nconst CatList = styled.div.withConfig({\n  displayName: \"Header__CatList\",\n  componentId: \"lu69i-1\"\n})([\"display:flex;flex-wrap:nowrap;overflow-x:scroll;text-align:center;margin-bottom:2rem;\"]);\nconst ALL_CATS_QUERY = gql`\n  query ALL_CATS_QUERY{\n    allCats{\n      id\n      name\n      image\n      iucnStatus\n    }\n  }\n`;\nconst Drawer = styled.div.withConfig({\n  displayName: \"Header__Drawer\",\n  componentId: \"lu69i-2\"\n})([\"display:\", \";justify-content:center;\"], props => props.open ? \"flex\" : \"none\");\n\nconst Header = () => {\n  const {\n    0: open,\n    1: setOpen\n  } = useState(false);\n\n  const openDrawer = e => {\n    setOpen(!open);\n  };\n\n  return __jsx(HeaderStyles, null, __jsx(\"div\", {\n    className: \"bar\"\n  }, __jsx(LogoStyles, null, __jsx(Link, {\n    href: \"/\"\n  }, __jsx(\"a\", {\n    href: \"/\"\n  }, \"Free Spirits\"))), __jsx(Nav, {\n    openDrawer: openDrawer\n  })), __jsx(Drawer, {\n    open: open\n  }, __jsx(Query, {\n    query: ALL_CATS_QUERY\n  }, ({\n    data,\n    error,\n    loading\n  }) => {\n    if (loading) return __jsx(\"p\", null, \"Loading...\");\n    if (error) return __jsx(\"p\", null, \"Error: \", error.message);\n    console.log(data);\n    return __jsx(CatList, null, data.allCats.map(cat => __jsx(NavCat, {\n      openDrawer: openDrawer,\n      cat: cat,\n      key: cat.id\n    })));\n  })));\n};\n\nexport default Header;","map":null,"metadata":{},"sourceType":"module"}