{"ast":null,"code":"var _jsxFileName = \"/Users/jinz/Projects/project3/frontend/components/Items.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styled from 'styled-components';\nimport { Query } from 'react-apollo';\nimport Item from './Item';\nimport gql from 'graphql-tag';\nconst ItemList = styled.div.withConfig({\n  displayName: \"Items__ItemList\",\n  componentId: \"sc-98eal8-0\"\n})([\"display:grid;text-align:center;margin:2rem auto;max-width:1000px;background-color:\", \"\"], props => props.theme.lightgrey);\nconst ALL_ITEMS_QUERY = gql`\n    query ALL_ITEMS_QUERY{\n    allItems {\n        id\n        title\n        description\n        image\n        price\n        unit\n    }\n    }\n`;\n\nconst Items = () => __jsx(Query, {\n  query: ALL_ITEMS_QUERY,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}, ({\n  data,\n  error,\n  loading\n}) => {\n  if (loading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Error: \", error.message);\n  return __jsx(ItemList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, data.allItems.map(item => __jsx(Item, {\n    item: item,\n    key: item.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })));\n});\n\nexport default Items;","map":{"version":3,"sources":["/Users/jinz/Projects/project3/frontend/components/Items.js"],"names":["styled","Query","Item","gql","ItemList","div","props","theme","lightgrey","ALL_ITEMS_QUERY","Items","data","error","loading","message","allItems","map","item","id"],"mappings":";;;AACA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAGA,MAAMC,QAAQ,GAAGJ,MAAM,CAACK,GAAV;AAAA;AAAA;AAAA,+FAKQC,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,SAL7B,CAAd;AASA,MAAMC,eAAe,GAAGN,GAAI;;;;;;;;;;;CAA5B;;AAaA,MAAMO,KAAK,GAAG,MACV,MAAC,KAAD;AAAO,EAAA,KAAK,EAAED,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACK,CAAC;AAAEE,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAAD,KAA8B;AAC3B,MAAIA,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAID,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAWA,KAAK,CAACE,OAAjB,CAAP;AACX,SACI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAWH,IAAI,CAACI,QAAL,CAAcC,GAAd,CAAkBC,IAAI,IAAI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEA,IAAZ;AAAkB,IAAA,GAAG,EAAEA,IAAI,CAACC,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA1B,CAAX,CADJ;AAGH,CAPL,CADJ;;AAYA,eAAeR,KAAf","sourcesContent":["\nimport styled from 'styled-components';\nimport { Query } from 'react-apollo';\nimport Item from './Item';\nimport gql from 'graphql-tag';\n\n\nconst ItemList = styled.div`\n  display: grid;\n  text-align: center;\n  margin: 2rem auto;\n  max-width: 1000px;\n  background-color: ${props => props.theme.lightgrey}\n\n`;\n\nconst ALL_ITEMS_QUERY = gql`\n    query ALL_ITEMS_QUERY{\n    allItems {\n        id\n        title\n        description\n        image\n        price\n        unit\n    }\n    }\n`;\n\nconst Items = () => (\n    <Query query={ALL_ITEMS_QUERY} >\n        {({ data, error, loading }) => {\n            if (loading) return <p>Loading...</p>;\n            if (error) return <p>Error: {error.message}</p>;\n            return (\n                <ItemList>{data.allItems.map(item => <Item item={item} key={item.id} />)}</ItemList>\n            );\n        }}\n    </Query>\n)\n\nexport default Items;\n"]},"metadata":{},"sourceType":"module"}