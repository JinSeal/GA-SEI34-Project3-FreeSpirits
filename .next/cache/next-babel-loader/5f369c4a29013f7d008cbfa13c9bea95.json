{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/jinz/Projects/project3/frontend/components/DonationForm.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport Form from './styles/Form';\nimport { FormField, TextInputField, Autocomplete, TextInput, Checkbox, Button, Heading, Combobox } from 'evergreen-ui';\nimport styled from 'styled-components';\nconst Styles = styled.div.withConfig({\n  displayName: \"DonationForm__Styles\",\n  componentId: \"sc-1a2kw3r-0\"\n})([\"background-color:\", \";padding:10rem 20rem 30rem 20rem;\"], props => props.theme.lightgrey);\n\nclass DonationForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      email: '',\n      updates: false,\n      gift: 0,\n      allocation: \"\"\n    });\n\n    _defineProperty(this, \"saveToState\", e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    });\n  }\n\n  render() {\n    return __jsx(Styles, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, __jsx(FormField, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, __jsx(Heading, {\n      size: 500,\n      marginTop: \"default\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Email *\"), __jsx(TextInputField, {\n      name: \"email\",\n      isInvalid: false,\n      inputWidth: 400,\n      placeholder: \"Enter your email\",\n      onChange: this.saveToState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), __jsx(Heading, {\n      size: 500,\n      marginTop: \"default\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Gift Amount *\"), __jsx(Autocomplete, {\n      height: 50,\n      onChange: this.saveToState,\n      name: \"gift\",\n      items: [25, 50, 100, 200, 500],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, props => {\n      const {\n        getInputProps,\n        getRef,\n        inputValue,\n        openMenu\n      } = props;\n      return __jsx(TextInput, _extends({\n        placeholder: \"Choose or Enter an Amount\",\n        width: 400,\n        value: inputValue,\n        innerRef: getRef,\n        label: \"Gift Amount\"\n      }, getInputProps({\n        onFocus: () => {\n          openMenu();\n        }\n      }), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }));\n    }), __jsx(Heading, {\n      size: 500,\n      marginTop: \"default\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Allocation\"), __jsx(Combobox, {\n      name: \"allocation\",\n      openOnFocus: true,\n      width: 400,\n      items: ['Banana', 'Orange', 'Apple', 'Mango'],\n      onChange: selected => this.setState({\n        allocation: selected\n      }),\n      placeholder: \"Select a Cat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, __jsx(Checkbox, {\n      name: \"updates\",\n      onChange: this.saveToState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), \" \", __jsx(Heading, {\n      size: 500,\n      marginTop: 0,\n      marginLeft: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Keep me updated on Free Spirits news\"), \" \"), __jsx(Button, {\n      height: 50,\n      marginTop: 30,\n      appearance: \"primary\",\n      intent: \"success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Complete this Transaction\")));\n  }\n\n}\n\nexport default DonationForm;","map":{"version":3,"sources":["/Users/jinz/Projects/project3/frontend/components/DonationForm.js"],"names":["React","Component","gql","Form","FormField","TextInputField","Autocomplete","TextInput","Checkbox","Button","Heading","Combobox","styled","Styles","div","props","theme","lightgrey","DonationForm","email","updates","gift","allocation","e","setState","target","name","value","render","saveToState","getInputProps","getRef","inputValue","openMenu","onFocus","selected","display","alignItems"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport Form from './styles/Form';\nimport { FormField, TextInputField, Autocomplete, TextInput, Checkbox, Button, Heading, Combobox } from 'evergreen-ui';\nimport styled from 'styled-components';\n\nconst Styles = styled.div`\n    background-color: ${props => props.theme.lightgrey};\n    padding: 10rem 20rem 30rem 20rem;\n`;\nclass DonationForm extends Component {\n    state = {\n        email: '',\n        updates: false,\n        gift: 0,\n        allocation: \"\"\n    };\n    saveToState = e => {\n        this.setState({ [e.target.name]: e.target.value });\n    };\n\n    render() {\n        return (\n            <Styles>\n                <FormField>\n                    <Heading size={500} marginTop=\"default\">Email *</Heading>\n                    <TextInputField\n                        name=\"email\"\n                        isInvalid={false}\n                        inputWidth={400}\n                        placeholder=\"Enter your email\"\n                        onChange={this.saveToState}\n                    />\n                    <Heading size={500} marginTop=\"default\">Gift Amount *</Heading>\n                    <Autocomplete height={50}\n                        onChange={this.saveToState}\n                        name=\"gift\"\n                        items={[25, 50, 100, 200, 500]}\n                    >\n                        {(props) => {\n                            const { getInputProps, getRef, inputValue, openMenu } = props\n                            return (\n                                <TextInput\n                                    placeholder=\"Choose or Enter an Amount\"\n                                    width={400}\n                                    value={inputValue}\n                                    innerRef={getRef}\n                                    label=\"Gift Amount\"\n                                    {...getInputProps({\n                                        onFocus: () => {\n                                            openMenu()\n                                        }\n                                    })}\n                                />\n                            )\n                        }}\n                    </Autocomplete>\n                    <Heading size={500} marginTop=\"default\">Allocation</Heading>\n                    <Combobox\n                        name=\"allocation\"\n                        openOnFocus\n                        width={400}\n                        items={['Banana', 'Orange', 'Apple', 'Mango']}\n                        onChange={selected => this.setState({ allocation: selected })}\n                        placeholder=\"Select a Cat\"\n                    />\n\n                    <div style={{ display: \"flex\", alignItems: \"center\" }}><Checkbox name=\"updates\"\n                        onChange={this.saveToState}\n                    /> <Heading size={500} marginTop={0} marginLeft={10} >Keep me updated on Free Spirits news</Heading> </div>\n                    <Button height={50} marginTop={30} appearance=\"primary\" intent=\"success\" >\n                        Complete this Transaction\n                </Button>\n\n\n                </FormField>\n            </Styles>\n        );\n    }\n}\n\nexport default DonationForm;\n"]},"metadata":{},"sourceType":"module"}