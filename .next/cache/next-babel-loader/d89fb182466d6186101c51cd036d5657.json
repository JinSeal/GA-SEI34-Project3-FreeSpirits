{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/jinz/Projects/project3/frontend/components/AdoptionForm.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { FormField, Button, Heading, Combobox } from 'evergreen-ui';\nimport styled from 'styled-components';\nimport { Query } from 'react-apollo';\nimport _ from 'underscore';\nconst Styles = styled.div.withConfig({\n  displayName: \"AdoptionForm__Styles\",\n  componentId: \"yh8uu8-0\"\n})([\"background-color:white;padding:2rem 5rem;\"]);\nconst ALL_CATS_QUERY = gql`\n  query ALL_CATS_QUERY{\n    allCats{\n      id\n      name\n      image\n      iucnStatus\n    }\n  }\n`;\n\nclass AdoptionForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      name: '',\n      image: \"static/image/stripe.jpg\"\n    });\n\n    _defineProperty(this, \"saveToState\", e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    });\n\n    _defineProperty(this, \"onToken\", async (res, createOrder) => {\n      NProgress.start();\n      await createDonation({\n        variables: {\n          token: res.id\n        }\n      }).catch(err => {\n        alert(err.message);\n      });\n      Router.push({\n        pathname: '/thankyou'\n      });\n    });\n  }\n\n  render() {\n    return __jsx(Query, {\n      query: ALL_CATS_QUERY,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, ({\n      data\n    }) => {\n      const catsName = _.pluck(data.allCats, \"name\");\n\n      let cat = _.where(data.allCats, {\n        name: this.state.cat\n      })[0];\n\n      let image = cat ? cat.image : this.state.image;\n      return __jsx(Styles, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, __jsx(FormField, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, __jsx(Heading, {\n        size: 500,\n        marginTop: \"default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Allocation\"), __jsx(Combobox, {\n        name: \"allocation\",\n        openOnFocus: true,\n        width: 400,\n        items: catsName,\n        onChange: selected => {\n          this.setState({\n            name: selected,\n            image: _.where(data.allCats, {\n              name: selected\n            })[0].image\n          });\n        },\n        placeholder: \"Select a Cat\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        style: {\n          height: '200px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, __jsx(\"img\", {\n        style: {\n          height: \"100%\",\n          borderRadius: \"50%\"\n        },\n        src: image,\n        alt: \"cat photo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })), __jsx(Button, {\n        height: 50,\n        marginTop: 30,\n        appearance: \"primary\",\n        intent: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Adopt\")));\n    });\n  }\n\n}\n\nexport default AdoptionForm;","map":{"version":3,"sources":["/Users/jinz/Projects/project3/frontend/components/AdoptionForm.js"],"names":["React","Component","gql","FormField","Button","Heading","Combobox","styled","Query","_","Styles","div","ALL_CATS_QUERY","AdoptionForm","name","image","e","setState","target","value","res","createOrder","NProgress","start","createDonation","variables","token","id","catch","err","alert","message","Router","push","pathname","render","data","catsName","pluck","allCats","cat","where","state","selected","height","borderRadius"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { FormField, Button, Heading, Combobox } from 'evergreen-ui';\nimport styled from 'styled-components';\nimport { Query } from 'react-apollo';\nimport _ from 'underscore';\n\nconst Styles = styled.div`\n    background-color: white;\n    padding: 2rem 5rem;\n`;\n\n\nconst ALL_CATS_QUERY = gql`\n  query ALL_CATS_QUERY{\n    allCats{\n      id\n      name\n      image\n      iucnStatus\n    }\n  }\n`;\n\nclass AdoptionForm extends Component {\n    state = {\n        name: '',\n        image: \"static/image/stripe.jpg\"\n    };\n\n\n    saveToState = e => {\n        this.setState({ [e.target.name]: e.target.value });\n    };\n\n    onToken = async (res, createOrder) => {\n        NProgress.start();\n        await createDonation({\n            variables: {\n                token: res.id,\n            },\n        }).catch(err => {\n            alert(err.message);\n        });\n        Router.push({\n            pathname: '/thankyou',\n        });\n    };\n\n    render() {\n        return (\n            <Query query={ALL_CATS_QUERY}>\n                {({ data }) => {\n                    const catsName = _.pluck(data.allCats, \"name\")\n                    let cat = _.where(data.allCats, { name: this.state.cat })[0]\n                    let image = cat ? cat.image : this.state.image\n\n                    return (\n                        <Styles>\n                            <FormField>\n                                <Heading size={500} marginTop=\"default\">Allocation</Heading>\n                                <Combobox\n                                    name=\"allocation\"\n                                    openOnFocus\n                                    width={400}\n                                    items={catsName}\n                                    onChange={selected => {\n                                        this.setState({\n                                            name: selected,\n                                            image: _.where(data.allCats, { name: selected })[0].image\n                                        })\n                                    }}\n                                    placeholder=\"Select a Cat\"\n                                />\n                                <div style={{ height: '200px' }}>\n                                    <img style={{ height: \"100%\", borderRadius: \"50%\" }} src={image} alt=\"cat photo\" />\n                                </div>\n                                <Button height={50} marginTop={30} appearance=\"primary\" intent=\"success\" >Adopt</Button>\n                            </FormField>\n                        </Styles >\n                    )\n                }}\n            </Query>\n\n        );\n    }\n}\n\nexport default AdoptionForm;\n"]},"metadata":{},"sourceType":"module"}