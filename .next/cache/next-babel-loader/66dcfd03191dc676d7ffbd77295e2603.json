{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/jinz/Projects/project3/frontend/components/Header.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALL_CATS_QUERY{\\n    allCats{\\n      id\\n      name\\n      image\\n      iucnStatus\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Link from 'next/link';\nimport React, { useState } from 'react';\nimport NProgress from 'nprogress';\nimport Router from 'next/router';\nimport Nav from './Nav';\nimport LogoStyles from './styles/LogoStyles';\nimport styled from 'styled-components';\nimport { Query } from 'react-apollo';\nimport NavCat from './NavCat';\nimport gql from 'graphql-tag';\n\nRouter.onRouteChangeStart = function () {\n  NProgress.start();\n};\n\nRouter.onRouteChangeComplete = function () {\n  NProgress.done();\n};\n\nRouter.onRouteChangeError = function () {\n  NProgress.done();\n};\n\nvar HeaderStyles = styled.header.withConfig({\n  displayName: \"Header__HeaderStyles\",\n  componentId: \"sc-2cpreo-0\"\n})([\".bar{background:#162231;color:white;display:grid;grid-template-columns:auto 1fr;justify-content:space-between;align-items:stretch;@media (max-width:1300px){grid-template-columns:1fr;justify-content:center;}}\"]);\nvar CatList = styled.div.withConfig({\n  displayName: \"Header__CatList\",\n  componentId: \"sc-2cpreo-1\"\n})([\"display:flex;text-align:center;\"]);\nvar ALL_CATS_QUERY = gql(_templateObject());\nvar Drawer = styled.div.withConfig({\n  displayName: \"Header__Drawer\",\n  componentId: \"sc-2cpreo-2\"\n})([\"display:\", \";justify-content:center;\"], function (props) {\n  return props.open ? \"flex\" : \"none\";\n});\n\nvar Header = function Header() {\n  var _useState = useState(false),\n      open = _useState[0],\n      setOpen = _useState[1];\n\n  var openDrawer = function openDrawer(e) {\n    setOpen(!open);\n  };\n\n  return __jsx(HeaderStyles, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"bar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, __jsx(LogoStyles, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Free Spirits\"))), __jsx(Nav, {\n    openDrawer: openDrawer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })), __jsx(Drawer, {\n    open: open,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, __jsx(Query, {\n    query: ALL_CATS_QUERY,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, function (_ref) {\n    var data = _ref.data,\n        error = _ref.error,\n        loading = _ref.loading;\n    if (loading) return __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Loading...\");\n    if (error) return __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Error: \", error.message);\n    return __jsx(CatList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, data.allCats.map(function (cat) {\n      return __jsx(NavCat, {\n        cat: cat,\n        key: cat.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      });\n    }));\n  })));\n};\n\nexport default Header;","map":{"version":3,"sources":["/Users/jinz/Projects/project3/frontend/components/Header.js"],"names":["Link","React","useState","NProgress","Router","Nav","LogoStyles","styled","Query","NavCat","gql","onRouteChangeStart","start","onRouteChangeComplete","done","onRouteChangeError","HeaderStyles","header","CatList","div","ALL_CATS_QUERY","Drawer","props","open","Header","setOpen","openDrawer","e","data","error","loading","message","allCats","map","cat","id"],"mappings":"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","sourcesContent":["import Link from 'next/link';\nimport React, { useState } from 'react';\nimport NProgress from 'nprogress';\nimport Router from 'next/router';\nimport Nav from './Nav';\nimport LogoStyles from './styles/LogoStyles';\nimport styled from 'styled-components';\nimport { Query } from 'react-apollo';\nimport NavCat from './NavCat';\nimport gql from 'graphql-tag';\n\nRouter.onRouteChangeStart = () => {\n  NProgress.start();\n};\nRouter.onRouteChangeComplete = () => {\n  NProgress.done();\n};\n\nRouter.onRouteChangeError = () => {\n  NProgress.done();\n};\n\n\nconst HeaderStyles = styled.header`\n.bar {\n\tbackground: #162231;\n\tcolor: white;\n\tdisplay: grid;\n\tgrid-template-columns: auto 1fr;\n\tjustify-content: space-between;\n\talign-items: stretch;\n\t@media (max-width: 1300px) {\n\t\tgrid-template-columns: 1fr;\n\t\tjustify-content: center;\n  }\n}\n`;\n\nconst CatList = styled.div`\n  display: flex;\n  text-align: center;\n`;\n\nconst ALL_CATS_QUERY = gql`\n  query ALL_CATS_QUERY{\n    allCats{\n      id\n      name\n      image\n      iucnStatus\n    }\n  }\n`;\n\nconst Drawer = styled.div`\n    display: ${props => props.open ? \"flex\" : \"none\"};\n    justify-content: center;\n`;\n\nconst Header = () => {\n  const [open, setOpen] = useState(false);\n\n  const openDrawer = e => {\n    setOpen(!open)\n  }\n\n  return (\n    <HeaderStyles>\n      <div className=\"bar\">\n        <LogoStyles>\n          <Link href=\"/\">\n            <a>Free Spirits</a>\n          </Link>\n        </LogoStyles>\n        <Nav openDrawer={openDrawer} />\n      </div>\n      <Drawer open={open}>\n        <Query query={ALL_CATS_QUERY} >\n          {({ data, error, loading }) => {\n            if (loading) return <p>Loading...</p>;\n            if (error) return <p>Error: {error.message}</p>;\n            return (\n              <CatList>{data.allCats.map(cat => <NavCat cat={cat} key={cat.id} />)}</CatList>\n            );\n          }}\n        </Query>\n      </Drawer>\n    </HeaderStyles>\n  )\n};\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}