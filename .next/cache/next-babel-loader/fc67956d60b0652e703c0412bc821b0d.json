{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/jinz/Projects/project3/frontend/pages/_app.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport App from 'next/app';\nimport Layout from '../components/Layout';\nimport { ApolloProvider } from 'react-apollo';\nimport withData from '../lib/withData';\n\nclass MyApp extends App {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n\n    pageProps.query = ctx.query;\n    return {\n      pageProps\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      apollo,\n      pageProps\n    } = this.props;\n    return __jsx(React.Fragment, null, __jsx(ApolloProvider, {\n      client: apollo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, __jsx(Component, _extends({}, pageProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default withData(MyApp);","map":{"version":3,"sources":["/Users/jinz/Projects/project3/frontend/pages/_app.js"],"names":["React","App","Layout","ApolloProvider","withData","MyApp","getInitialProps","Component","ctx","pageProps","query","render","apollo","props"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,OAAOC,QAAP,MAAqB,iBAArB;;AAEA,MAAMC,KAAN,SAAoBJ,GAApB,CAAwB;AACtB,eAAaK,eAAb,CAA8B;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAA9B,EAAkD;AAChD,QAAIC,SAAS,GAAG,EAAhB;;AACA,QAAIF,SAAS,CAACD,eAAd,EAA+B;AAC7BG,MAAAA,SAAS,GAAG,MAAMF,SAAS,CAACD,eAAV,CAA0BE,GAA1B,CAAlB;AACD;;AACDC,IAAAA,SAAS,CAACC,KAAV,GAAkBF,GAAG,CAACE,KAAtB;AACA,WAAO;AAAED,MAAAA;AAAF,KAAP;AACD;;AAEDE,EAAAA,MAAM,GAAI;AACR,UAAM;AAAEJ,MAAAA,SAAF;AAAaK,MAAAA,MAAb;AAAqBH,MAAAA;AAArB,QAAmC,KAAKI,KAA9C;AAEA,WACE,4BACE,MAAC,cAAD;AAAgB,MAAA,MAAM,EAAED,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD,eAAeH,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF,CADF,CADF;AASD;;AAtBqB;;AAyBxB,eAAeL,QAAQ,CAACC,KAAD,CAAvB","sourcesContent":["import React from 'react'\nimport App from 'next/app'\nimport Layout from '../components/Layout'\nimport { ApolloProvider } from 'react-apollo'\nimport withData from '../lib/withData'\n\nclass MyApp extends App {\n  static async getInitialProps ({ Component, ctx }) {\n    let pageProps = {}\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx)\n    }\n    pageProps.query = ctx.query\n    return { pageProps }\n  }\n\n  render () {\n    const { Component, apollo, pageProps } = this.props\n\n    return (\n      <>\n        <ApolloProvider client={apollo}>\n          <Layout>\n            <Component {...pageProps} />\n          </Layout>\n        </ApolloProvider>\n      </>\n    )\n  }\n}\n\nexport default withData(MyApp)\n"]},"metadata":{},"sourceType":"module"}