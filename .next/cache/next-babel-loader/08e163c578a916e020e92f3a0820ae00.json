{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Form from './styles/Form';\nimport Error from './ErrorMessage';\nimport { CURRENT_USER_QUERY } from './User';\nimport Link from 'next/link';\nconst SIGNIN_MUTATION = gql`\n  mutation SIGNIN_MUTATION($username: String!, $password: String!) {\n    tokenAuth(username: $username, password: $password) {\n      token\n    }\n  }\n`;\n\nclass Signin extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      username: '',\n      password: '',\n      email: ''\n    });\n\n    _defineProperty(this, \"saveToState\", e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    });\n  }\n\n  render() {\n    return __jsx(Mutation, {\n      mutation: SIGNIN_MUTATION,\n      variables: this.state,\n      refetchQueries: [{\n        query: CURRENT_USER_QUERY\n      }]\n    }, (tokenAuth, {\n      error,\n      loading\n    }) => __jsx(Form, {\n      method: \"post\",\n      onSubmit: async e => {\n        e.preventDefault();\n        await tokenAuth();\n        this.setState({\n          username: '',\n          email: '',\n          password: ''\n        });\n      }\n    }, __jsx(\"fieldset\", {\n      disabled: loading,\n      \"aria-busy\": loading\n    }, __jsx(\"h2\", null, \"Sign into your account\"), __jsx(Error, {\n      error: error\n    }), __jsx(\"label\", {\n      htmlFor: \"username\"\n    }, \"Username\", __jsx(\"input\", {\n      type: \"username\",\n      name: \"username\",\n      placeholder: \"username\",\n      value: this.state.username,\n      onChange: this.saveToState\n    })), __jsx(\"label\", {\n      htmlFor: \"password\"\n    }, \"Password\", __jsx(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"password\",\n      value: this.state.password,\n      onChange: this.saveToState\n    })), __jsx(\"button\", {\n      type: \"submit\"\n    }, \"Sign In!\"), __jsx(Link, {\n      href: \"/signup\"\n    }, __jsx(\"a\", null, \"Signup\")), __jsx(Link, {\n      href: \"/resetpwd\"\n    }, __jsx(\"a\", null, \"Reset Password\")))));\n  }\n\n}\n\nexport default Signin;","map":null,"metadata":{},"sourceType":"module"}